define(["jquery","bootstrap","js/templates"],function(o,a,n){const i={$container:o({}),tabs:[],onTabChanged:function(){}},e={templatePath:"",id:"",displayName:"",knockoutData:{}};let s=0;function t(t){const a=this;this.options=o.extend(!0,{},i,t),t=n.renderTemplate("tabsContent",{tabs:this.options.tabs}),this.options.$container.html(t.html),this.options.$container.on("shown.bs.tab",'[data-bs-toggle="tab"]',function(t){var n=o(t.target).attr("data-id");a.options.onTabChanged(t,n)})}return t.prototype.showTab=function(n){var t=this.options.tabs.find(t=>t.id===n);t&&a.Tab.getOrCreateInstance(document.getElementById(t.tabDomId)).show()},t.prototype.getTabId=function(n){var t=this.options.tabs.find(t=>t.id===n);if(t)return t.id+"-tab"},t.prototype.getTabContentId=function(n){var t=this.options.tabs.find(t=>t.id===n);if(t)return t.id+"-tabContent"},t.Tab=function(t){t=o.extend(!0,{},e,t),this.id=t.id,this.displayName=t.displayName,this.templatePath=t.templatePath,this.knockoutData=t.knockoutData,this.tabDomId=`tab-${s}-`+t.id,this.tabContentDomId=`tabContent-${s}-`+t.id,s++},t});